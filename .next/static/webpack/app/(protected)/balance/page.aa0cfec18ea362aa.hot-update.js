/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(protected)/balance/page",{

/***/ "(app-pages-browser)/./src/shared/api/base-api.ts":
/*!************************************!*\
  !*** ./src/shared/api/base-api.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   api: function() { return /* binding */ api; },\n/* harmony export */   axiosInstance: function() { return /* binding */ axiosInstance; }\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/./node_modules/axios/lib/axios.js\");\n/* harmony import */ var _signature__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signature */ \"(app-pages-browser)/./src/shared/api/signature.ts\");\n/* harmony import */ var _signature__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_signature__WEBPACK_IMPORTED_MODULE_0__);\n// base-api.ts\n\n\n// Базовый URL API\nconst API_BASE_URL = \"/api\";\n//const API_BASE_URL = 'https://bet-provider.coolify.tgapps.cloud';\n// Пользовательские данные для аутентификации\nlet currentUser = null;\n// Создание экземпляра axios с базовым URL\nconst axiosInstance = axios__WEBPACK_IMPORTED_MODULE_1__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    timeout: 10000,\n    headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n    }\n});\n// Интерцептор запросов - добавляет заголовки аутентификации\naxiosInstance.interceptors.request.use((config)=>{\n    // Если пользователь авторизован, добавляем заголовки аутентификации\n    if (currentUser) {\n        var _config_method;\n        const method = ((_config_method = config.method) === null || _config_method === void 0 ? void 0 : _config_method.toUpperCase()) || \"GET\";\n        const url = config.url || \"\";\n        // Для GET запросов используем пустой объект\n        const body = method === \"GET\" ? {} : config.data;\n        // Получаем заголовки аутентификации с методом и URL\n        const authHeaders = (0,_signature__WEBPACK_IMPORTED_MODULE_0__.getAuthHeaders)(currentUser, body, method, url);\n        // Устанавливаем заголовки явно\n        config.headers = {\n            ...config.headers,\n            \"user-id\": authHeaders[\"user-id\"],\n            \"x-timestamp\": authHeaders[\"x-timestamp\"],\n            \"x-signature\": authHeaders[\"x-signature\"]\n        };\n        console.log(\"Final request headers:\", config.headers);\n        console.log(\"Request body:\", body);\n    }\n    return config;\n}, (error)=>{\n    return Promise.reject(error);\n});\n// Интерцептор ответов - обрабатывает ошибки\naxiosInstance.interceptors.response.use((response)=>{\n    return response;\n}, (error)=>{\n    if (error.response) {\n        console.error(\"Request error:\", error);\n        // Подробная информация об ошибке\n        console.error(\"Error response status:\", error.response.status);\n        if (error.response.data) {\n            console.error(\"Error response data:\", error.response.data);\n        }\n        // Если ошибка связана с аутентификацией (401) или авторизацией (403)\n        if (error.response.status === 401 || error.response.status === 403) {\n            // Логика перенаправления на страницу входа, если это не страница входа\n            if ( true && window.location.pathname !== \"/login\") {\n                // Очищаем данные пользователя\n                localStorage.removeItem(\"user\");\n                currentUser = null;\n                // Перенаправляем на страницу входа\n                window.location.href = \"/login\";\n            }\n        }\n    }\n    return Promise.reject(error);\n});\n// Функция для проверки правильного формата user\nconst validateUser = (user)=>{\n    return user && typeof user === \"object\" && typeof user.userId === \"string\" && typeof user.secretKey === \"string\";\n};\n// API обертка с типизацией\nconst api = {\n    /**\n   * Устанавливает данные пользователя для аутентификации\n   */ setUser: (user)=>{\n        if (!validateUser(user)) {\n            console.error(\"Invalid user format. User must have userId and secretKey properties.\");\n            return;\n        }\n        currentUser = user;\n        console.log(\"User set:\", user);\n    },\n    /**\n   * Очищает данные пользователя\n   */ clearUser: ()=>{\n        currentUser = null;\n        console.log(\"User cleared\");\n    },\n    /**\n   * Возвращает текущего пользователя\n   */ getUser: ()=>{\n        return currentUser;\n    },\n    /**\n   * Выполняет GET запрос\n   */ get: async (url, config)=>{\n        return axiosInstance.get(url, config);\n    },\n    /**\n   * Выполняет POST запрос\n   */ post: async (url, data, config)=>{\n        return axiosInstance.post(url, data, config);\n    },\n    /**\n   * Выполняет PUT запрос\n   */ put: async (url, data, config)=>{\n        return axiosInstance.put(url, data, config);\n    },\n    /**\n   * Выполняет DELETE запрос\n   */ delete: async (url, config)=>{\n        return axiosInstance.delete(url, config);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/shared/api/base-api.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/shared/api/signature.ts":
/*!*************************************!*\
  !*** ./src/shared/api/signature.ts ***!
  \*************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import HmacSHA512 from 'crypto-js/hmac-sha512';\n// import { User } from '@/shared/types/common';\n// /**\n//  * Создает HMAC SHA-512 подпись для запроса\n//  * @param body - тело запроса\n//  * @param secretKey - секретный ключ пользователя\n//  * @param method - HTTP метод (GET, POST, etc.)\n//  * @param url - URL запроса\n//  * @returns hex-строка с подписью\n//  */\n// export const createSignature = (\n//   body: any,\n//   secretKey: string,\n//   method?: string,\n//   url?: string\n// ): string => {\n//   let payload = '';\n//   if (body === undefined || body === null) {\n//     payload = '{}'; // Пустой объект для отсутствующего тела\n//   } else if (typeof body === 'string') {\n//     payload = body;\n//   } else {\n//     try {\n//       payload = JSON.stringify(body);\n//     } catch (error) {\n//       console.error('Error stringifying body:', error);\n//       payload = '{}';\n//     }\n//   }\n//   // Формируем данные для подписи\n//   let signatureData = payload;\n//   if (method && url) {\n//     signatureData = `${method.toUpperCase()}:${url}:${payload}`;\n//   }\n//   console.log('Signature payload:', signatureData);\n//   console.log('Signature secret key:', secretKey);\n//   // Создаем HMAC SHA-512 подпись\n//   const signature = HmacSHA512(signatureData, secretKey).toString();\n//   console.log('Generated signature:', signature);\n//   return signature;\n// };\n// /**\n//  * Возвращает заголовки с аутентификацией для запроса\n//  * @param user - данные пользователя\n//  * @param body - тело запроса\n//  * @param method - HTTP метод\n//  * @param url - URL запроса\n//  * @returns объект с заголовками\n//  */\n// export const getAuthHeaders = (\n//   user: User,\n//   body?: any,\n//   method?: string,\n//   url?: string\n// ): Record<string, string> => {\n//   const timestamp = Date.now().toString();\n//   // Формируем заголовки согласно документации API\n//   const headers = {\n//     'user-id': user.userId,\n//     'x-timestamp': timestamp,\n//     'x-signature': createSignature(body, user.secretKey, method, url),\n//   };\n//   console.log('Auth headers:', headers);\n//   return headers;\n// };\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zaGFyZWQvYXBpL3NpZ25hdHVyZS50cyIsIm1hcHBpbmdzIjoiQUFDQSxrREFBa0Q7QUFDbEQsZ0RBQWdEO0FBRWhELE1BQU07QUFDTiw4Q0FBOEM7QUFDOUMsZ0NBQWdDO0FBQ2hDLG9EQUFvRDtBQUNwRCxrREFBa0Q7QUFDbEQsOEJBQThCO0FBQzlCLG9DQUFvQztBQUNwQyxNQUFNO0FBRU4sbUNBQW1DO0FBQ25DLGVBQWU7QUFDZix1QkFBdUI7QUFDdkIscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQixpQkFBaUI7QUFDakIsc0JBQXNCO0FBRXRCLCtDQUErQztBQUMvQywrREFBK0Q7QUFDL0QsMkNBQTJDO0FBQzNDLHNCQUFzQjtBQUN0QixhQUFhO0FBQ2IsWUFBWTtBQUNaLHdDQUF3QztBQUN4Qyx3QkFBd0I7QUFDeEIsMERBQTBEO0FBQzFELHdCQUF3QjtBQUN4QixRQUFRO0FBQ1IsTUFBTTtBQUVOLG9DQUFvQztBQUNwQyxpQ0FBaUM7QUFDakMseUJBQXlCO0FBQ3pCLG1FQUFtRTtBQUNuRSxNQUFNO0FBRU4sc0RBQXNEO0FBQ3RELHFEQUFxRDtBQUVyRCxvQ0FBb0M7QUFDcEMsdUVBQXVFO0FBRXZFLG9EQUFvRDtBQUVwRCxzQkFBc0I7QUFDdEIsS0FBSztBQUdMLE1BQU07QUFDTix3REFBd0Q7QUFDeEQsdUNBQXVDO0FBQ3ZDLGdDQUFnQztBQUNoQyxnQ0FBZ0M7QUFDaEMsOEJBQThCO0FBQzlCLG1DQUFtQztBQUNuQyxNQUFNO0FBQ04sa0NBQWtDO0FBQ2xDLGdCQUFnQjtBQUNoQixnQkFBZ0I7QUFDaEIscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQixpQ0FBaUM7QUFDakMsNkNBQTZDO0FBRTdDLHFEQUFxRDtBQUNyRCxzQkFBc0I7QUFDdEIsOEJBQThCO0FBQzlCLGdDQUFnQztBQUNoQyx5RUFBeUU7QUFDekUsT0FBTztBQUVQLDJDQUEyQztBQUUzQyxvQkFBb0I7QUFDcEIsS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvc2hhcmVkL2FwaS9zaWduYXR1cmUudHM/OGFkOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcbi8vIGltcG9ydCBIbWFjU0hBNTEyIGZyb20gJ2NyeXB0by1qcy9obWFjLXNoYTUxMic7XG4vLyBpbXBvcnQgeyBVc2VyIH0gZnJvbSAnQC9zaGFyZWQvdHlwZXMvY29tbW9uJztcblxuLy8gLyoqXG4vLyAgKiDQodC+0LfQtNCw0LXRgiBITUFDIFNIQS01MTIg0L/QvtC00L/QuNGB0Ywg0LTQu9GPINC30LDQv9GA0L7RgdCwXG4vLyAgKiBAcGFyYW0gYm9keSAtINGC0LXQu9C+INC30LDQv9GA0L7RgdCwXG4vLyAgKiBAcGFyYW0gc2VjcmV0S2V5IC0g0YHQtdC60YDQtdGC0L3Ri9C5INC60LvRjtGHINC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xuLy8gICogQHBhcmFtIG1ldGhvZCAtIEhUVFAg0LzQtdGC0L7QtCAoR0VULCBQT1NULCBldGMuKVxuLy8gICogQHBhcmFtIHVybCAtIFVSTCDQt9Cw0L/RgNC+0YHQsFxuLy8gICogQHJldHVybnMgaGV4LdGB0YLRgNC+0LrQsCDRgSDQv9C+0LTQv9C40YHRjNGOXG4vLyAgKi9cblxuLy8gZXhwb3J0IGNvbnN0IGNyZWF0ZVNpZ25hdHVyZSA9IChcbi8vICAgYm9keTogYW55LFxuLy8gICBzZWNyZXRLZXk6IHN0cmluZyxcbi8vICAgbWV0aG9kPzogc3RyaW5nLFxuLy8gICB1cmw/OiBzdHJpbmdcbi8vICk6IHN0cmluZyA9PiB7XG4vLyAgIGxldCBwYXlsb2FkID0gJyc7XG4gIFxuLy8gICBpZiAoYm9keSA9PT0gdW5kZWZpbmVkIHx8IGJvZHkgPT09IG51bGwpIHtcbi8vICAgICBwYXlsb2FkID0gJ3t9JzsgLy8g0J/Rg9GB0YLQvtC5INC+0LHRitC10LrRgiDQtNC70Y8g0L7RgtGB0YPRgtGB0YLQstGD0Y7RidC10LPQviDRgtC10LvQsFxuLy8gICB9IGVsc2UgaWYgKHR5cGVvZiBib2R5ID09PSAnc3RyaW5nJykge1xuLy8gICAgIHBheWxvYWQgPSBib2R5O1xuLy8gICB9IGVsc2Uge1xuLy8gICAgIHRyeSB7XG4vLyAgICAgICBwYXlsb2FkID0gSlNPTi5zdHJpbmdpZnkoYm9keSk7XG4vLyAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbi8vICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIHN0cmluZ2lmeWluZyBib2R5OicsIGVycm9yKTtcbi8vICAgICAgIHBheWxvYWQgPSAne30nO1xuLy8gICAgIH1cbi8vICAgfVxuICBcbi8vICAgLy8g0KTQvtGA0LzQuNGA0YPQtdC8INC00LDQvdC90YvQtSDQtNC70Y8g0L/QvtC00L/QuNGB0Lhcbi8vICAgbGV0IHNpZ25hdHVyZURhdGEgPSBwYXlsb2FkO1xuLy8gICBpZiAobWV0aG9kICYmIHVybCkge1xuLy8gICAgIHNpZ25hdHVyZURhdGEgPSBgJHttZXRob2QudG9VcHBlckNhc2UoKX06JHt1cmx9OiR7cGF5bG9hZH1gO1xuLy8gICB9XG4gIFxuLy8gICBjb25zb2xlLmxvZygnU2lnbmF0dXJlIHBheWxvYWQ6Jywgc2lnbmF0dXJlRGF0YSk7XG4vLyAgIGNvbnNvbGUubG9nKCdTaWduYXR1cmUgc2VjcmV0IGtleTonLCBzZWNyZXRLZXkpO1xuICBcbi8vICAgLy8g0KHQvtC30LTQsNC10LwgSE1BQyBTSEEtNTEyINC/0L7QtNC/0LjRgdGMXG4vLyAgIGNvbnN0IHNpZ25hdHVyZSA9IEhtYWNTSEE1MTIoc2lnbmF0dXJlRGF0YSwgc2VjcmV0S2V5KS50b1N0cmluZygpO1xuICBcbi8vICAgY29uc29sZS5sb2coJ0dlbmVyYXRlZCBzaWduYXR1cmU6Jywgc2lnbmF0dXJlKTtcbiAgXG4vLyAgIHJldHVybiBzaWduYXR1cmU7XG4vLyB9O1xuXG5cbi8vIC8qKlxuLy8gICog0JLQvtC30LLRgNCw0YnQsNC10YIg0LfQsNCz0L7Qu9C+0LLQutC4INGBINCw0YPRgtC10L3RgtC40YTQuNC60LDRhtC40LXQuSDQtNC70Y8g0LfQsNC/0YDQvtGB0LBcbi8vICAqIEBwYXJhbSB1c2VyIC0g0LTQsNC90L3Ri9C1INC/0L7Qu9GM0LfQvtCy0LDRgtC10LvRj1xuLy8gICogQHBhcmFtIGJvZHkgLSDRgtC10LvQviDQt9Cw0L/RgNC+0YHQsFxuLy8gICogQHBhcmFtIG1ldGhvZCAtIEhUVFAg0LzQtdGC0L7QtFxuLy8gICogQHBhcmFtIHVybCAtIFVSTCDQt9Cw0L/RgNC+0YHQsFxuLy8gICogQHJldHVybnMg0L7QsdGK0LXQutGCINGBINC30LDQs9C+0LvQvtCy0LrQsNC80Lhcbi8vICAqL1xuLy8gZXhwb3J0IGNvbnN0IGdldEF1dGhIZWFkZXJzID0gKFxuLy8gICB1c2VyOiBVc2VyLFxuLy8gICBib2R5PzogYW55LFxuLy8gICBtZXRob2Q/OiBzdHJpbmcsXG4vLyAgIHVybD86IHN0cmluZ1xuLy8gKTogUmVjb3JkPHN0cmluZywgc3RyaW5nPiA9PiB7XG4vLyAgIGNvbnN0IHRpbWVzdGFtcCA9IERhdGUubm93KCkudG9TdHJpbmcoKTtcbiAgXG4vLyAgIC8vINCk0L7RgNC80LjRgNGD0LXQvCDQt9Cw0LPQvtC70L7QstC60Lgg0YHQvtCz0LvQsNGB0L3QviDQtNC+0LrRg9C80LXQvdGC0LDRhtC40LggQVBJXG4vLyAgIGNvbnN0IGhlYWRlcnMgPSB7XG4vLyAgICAgJ3VzZXItaWQnOiB1c2VyLnVzZXJJZCxcbi8vICAgICAneC10aW1lc3RhbXAnOiB0aW1lc3RhbXAsXG4vLyAgICAgJ3gtc2lnbmF0dXJlJzogY3JlYXRlU2lnbmF0dXJlKGJvZHksIHVzZXIuc2VjcmV0S2V5LCBtZXRob2QsIHVybCksXG4vLyAgIH07XG4gIFxuLy8gICBjb25zb2xlLmxvZygnQXV0aCBoZWFkZXJzOicsIGhlYWRlcnMpO1xuICBcbi8vICAgcmV0dXJuIGhlYWRlcnM7XG4vLyB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/shared/api/signature.ts\n"));

/***/ })

});