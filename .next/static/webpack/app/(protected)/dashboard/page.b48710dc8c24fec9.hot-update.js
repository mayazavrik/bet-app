"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(protected)/dashboard/page",{

/***/ "(app-pages-browser)/./src/features/place-bet/model/index.ts":
/*!***********************************************!*\
  !*** ./src/features/place-bet/model/index.ts ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRecommendedBet: function() { return /* binding */ getRecommendedBet; },\n/* harmony export */   getWinResult: function() { return /* binding */ getWinResult; },\n/* harmony export */   placeBet: function() { return /* binding */ placeBet; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _entities_bet_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/entities/bet/api */ \"(app-pages-browser)/./src/entities/bet/api/index.ts\");\n/* harmony import */ var _entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/entities/bet/model/slice */ \"(app-pages-browser)/./src/entities/bet/model/slice.ts\");\n/* harmony import */ var _entities_balance_model_slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/entities/balance/model/slice */ \"(app-pages-browser)/./src/entities/balance/model/slice.ts\");\n\n\n\n\n/**\n * Асинхронное действие для получения рекомендуемой ставки\n */ const getRecommendedBet = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"bet/getRecommended\", async (_, param)=>{\n    let { dispatch } = param;\n    try {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchRecommendedBetStart)());\n        const response = await _entities_bet_api__WEBPACK_IMPORTED_MODULE_0__.betApi.getRecommendedBet();\n        // Извлекаем только recommendedAmount из ответа API\n        const recommendedAmount = response.recommendedAmount;\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchRecommendedBetSuccess)(recommendedAmount));\n        return recommendedAmount;\n    } catch (error) {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchRecommendedBetFailure)(error.message || \"Failed to get recommended bet\"));\n        throw error;\n    }\n});\n/**\n * Асинхронное действие для размещения ставки\n */ /**\n * Асинхронное действие для размещения ставки\n */ // export const placeBet = createAsyncThunk(\n//   'bet/place',\n//   async (betAmount: number, { dispatch }) => {\n//     try {\n//       dispatch(placeBetStart());\n//       const betData = {\n//         betId: `bet-${Date.now()}`,\n//         option: 'win',\n//         amount: betAmount\n//       };\n//       const result = await betApi.placeBet(betData);\n//       console.log('API response:', result);\n//       // Проверка наличия объекта bet\n//       if (result.bet) {\n//         // Проверка типа amount и подготовка правильного значения\n//         let amount = betAmount; // По умолчанию используем оригинальную сумму\n//         if (typeof result.bet.amount === 'object' && result.bet.amount !== null) {\n//           // Если amount - объект, и у него есть числовое свойство amount\n//           if (typeof result.bet.amount.amount === 'number') {\n//             amount = result.bet.amount.amount;\n//           } else if (result.bet.amount.amount && typeof result.bet.amount.amount === 'object') {\n//             // Если внутри еще один объект, пытаемся найти числовое значение\n//             amount = result.bet.amount.amount.amount || betAmount;\n//           }\n//         } else if (typeof result.bet.amount === 'number') {\n//           amount = result.bet.amount;\n//         }\n//         dispatch(placeBetSuccess({\n//           betId: result.bet.id,\n//           amount: amount // Используем проверенное и подготовленное значение\n//         }));\n//       } else {\n//         throw new Error('Неверный формат ответа API');\n//       }\n//       // Остальная часть функции без изменений\n//       if (result.balance) {\n//         dispatch(updateBalanceAfterBet(result.balance));\n//       }\n//       setTimeout(() => {\n//         dispatch(resetBetAnimation());\n//       }, 1000);\n//       return result;\n//     } catch (error: any) {\n//       dispatch(placeBetFailure(error.message || 'Ошибка размещения ставки'));\n//       throw error;\n//     }\n//   }\n// );\n// export const placeBet = createAsyncThunk(\n//   'bet/place',\n//   async (betAmount: number, { dispatch }) => {\n//     try {\n//       dispatch(placeBetStart());\n//       const betData = {\n//         betId: `bet-${Date.now()}`,\n//         option: 'win',\n//         amount: betAmount\n//       };\n//       const result = await betApi.placeBet(betData);\n//       console.log('API response:', result);\n//       if (result.bet) {\n//         // Проверяем тип данных amount\n//         let amount = typeof result.bet.amount === 'number' \n//           ? result.bet.amount \n//           : betAmount;\n//         dispatch(placeBetSuccess({\n//           betId: result.bet.id,\n//           amount: amount\n//         }));\n//       } else {\n//         throw new Error('Неверный формат ответа API');\n//       }\n//       setTimeout(() => {\n//         dispatch(resetBetAnimation());\n//       }, 1000);\n//       return result;\n//     } catch (error: any) {\n//       dispatch(placeBetFailure(error.message || 'Ошибка размещения ставки'));\n//       throw error;\n//     }\n//   }\n// );\nconst placeBet = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"bet/place\", async (betAmount, param)=>{\n    let { dispatch } = param;\n    try {\n        var _result_bet, _result_bet1;\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.placeBetStart)());\n        const betData = {\n            betId: \"bet-\".concat(Date.now()),\n            option: \"win\",\n            amount: betAmount\n        };\n        // Вызов API (остается без изменений)\n        const result = await _entities_bet_api__WEBPACK_IMPORTED_MODULE_0__.betApi.placeBet(betData);\n        console.log(\"API response:\", result);\n        // Используем только безопасные примитивные значения\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.placeBetSuccess)({\n            betId: ((_result_bet = result.bet) === null || _result_bet === void 0 ? void 0 : _result_bet.id) || \"bet-\".concat(Date.now()),\n            amount: typeof ((_result_bet1 = result.bet) === null || _result_bet1 === void 0 ? void 0 : _result_bet1.amount) === \"number\" ? result.bet.amount : betAmount\n        }));\n        // Сбрасываем анимацию\n        setTimeout(()=>{\n            dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.resetBetAnimation)());\n        }, 1000);\n        // Возвращаем безопасную версию результата\n        return {\n            ...result,\n            // Убедимся, что bet содержит только примитивные значения\n            bet: result.bet ? {\n                id: result.bet.id,\n                amount: typeof result.bet.amount === \"number\" ? result.bet.amount : betAmount,\n                option: result.bet.option,\n                timestamp: result.bet.timestamp\n            } : null\n        };\n    } catch (error) {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.placeBetFailure)(error.message || \"Ошибка размещения ставки\"));\n        throw error;\n    }\n});\n/**\n * Асинхронное действие для получения результата ставки\n */ // export const getWinResult = createAsyncThunk(\n//   'bet/getWin',\n//   async (betId: string, { dispatch }) => {\n//     try {\n//       dispatch(fetchWinStart());\n//       const result = await betApi.getWin(betId);\n//       dispatch(fetchWinSuccess({ \n//         betId, \n//         win: result.win, \n//         amount: result.amount \n//       }));\n//       // Обновляем баланс\n//       dispatch(updateBalanceAfterWin(result.balance));\n//       // Сбрасываем анимации через небольшую задержку\n//       setTimeout(() => {\n//         dispatch(resetWinAnimation());\n//         dispatch(resetLoseAnimation());\n//       }, 2000);\n//       return result;\n//     } catch (error: any) {\n//       dispatch(fetchWinFailure(error.message || 'Failed to get win result'));\n//       throw error;\n//     }\n//   }\n// );\nconst getWinResult = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"bet/getWin\", async (betId, param)=>{\n    let { dispatch } = param;\n    try {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchWinStart)());\n        const result = await _entities_bet_api__WEBPACK_IMPORTED_MODULE_0__.betApi.getWin(betId);\n        console.log(\"Win result:\", result); // Добавьте для отладки\n        // Проверяем наличие необходимых полей\n        const win = result.result === \"win\" || result.win === true;\n        const amount = typeof result.amount === \"number\" ? result.amount : 0;\n        const balance = typeof result.balance === \"number\" ? result.balance : undefined;\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchWinSuccess)({\n            betId,\n            win,\n            amount\n        }));\n        if (result.balance === undefined) {\n            try {\n                const balanceResponse = await fetch(\"/api/balance\");\n                const balanceData = await balanceResponse.json();\n                if (balanceData.balance !== undefined) {\n                    dispatch((0,_entities_balance_model_slice__WEBPACK_IMPORTED_MODULE_2__.updateBalanceAfterWin)(balanceData.balance));\n                }\n            } catch (balanceError) {\n                console.error(\"Failed to fetch balance:\", balanceError);\n            }\n        } else {\n            dispatch((0,_entities_balance_model_slice__WEBPACK_IMPORTED_MODULE_2__.updateBalanceAfterWin)(result.balance));\n        }\n        // Обновляем баланс только если он определен\n        if (balance !== undefined) {\n            dispatch((0,_entities_balance_model_slice__WEBPACK_IMPORTED_MODULE_2__.updateBalanceAfterWin)(balance));\n        }\n        // Сбрасываем анимации через небольшую задержку\n        setTimeout(()=>{\n            dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.resetWinAnimation)());\n            dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.resetLoseAnimation)());\n        }, 2000);\n        return result;\n    } catch (error) {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchWinFailure)(error.message || \"Failed to get win result\"));\n        throw error;\n    }\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9mZWF0dXJlcy9wbGFjZS1iZXQvbW9kZWwvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFvRDtBQUNSO0FBY1I7QUFDMEQ7QUFFOUY7O0NBRUMsR0FDTSxNQUFNZSxvQkFBb0JmLGtFQUFnQkEsQ0FDL0Msc0JBQ0EsT0FBT2dCO1FBQUcsRUFBRUMsUUFBUSxFQUFFO0lBQ3BCLElBQUk7UUFDRkEsU0FBU2YsbUZBQXdCQTtRQUVqQyxNQUFNZ0IsV0FBVyxNQUFNakIscURBQU1BLENBQUNjLGlCQUFpQjtRQUUvQyxtREFBbUQ7UUFDbkQsTUFBTUksb0JBQW9CRCxTQUFTQyxpQkFBaUI7UUFFcERGLFNBQVNkLHFGQUEwQkEsQ0FBQ2dCO1FBQ3BDLE9BQU9BO0lBQ1QsRUFBRSxPQUFPQyxPQUFZO1FBQ25CSCxTQUFTYixxRkFBMEJBLENBQUNnQixNQUFNQyxPQUFPLElBQUk7UUFDckQsTUFBTUQ7SUFDUjtBQUNGLEdBQ0E7QUFFRjs7Q0FFQyxHQUNEOztDQUVDLEdBQ0QsNENBQTRDO0FBQzVDLGlCQUFpQjtBQUNqQixpREFBaUQ7QUFDakQsWUFBWTtBQUNaLG1DQUFtQztBQUVuQywwQkFBMEI7QUFDMUIsc0NBQXNDO0FBQ3RDLHlCQUF5QjtBQUN6Qiw0QkFBNEI7QUFDNUIsV0FBVztBQUVYLHVEQUF1RDtBQUN2RCw4Q0FBOEM7QUFFOUMsd0NBQXdDO0FBQ3hDLDBCQUEwQjtBQUMxQixvRUFBb0U7QUFDcEUsZ0ZBQWdGO0FBRWhGLHFGQUFxRjtBQUNyRiw0RUFBNEU7QUFDNUUsZ0VBQWdFO0FBQ2hFLGlEQUFpRDtBQUNqRCxtR0FBbUc7QUFDbkcsK0VBQStFO0FBQy9FLHFFQUFxRTtBQUNyRSxjQUFjO0FBQ2QsOERBQThEO0FBQzlELHdDQUF3QztBQUN4QyxZQUFZO0FBRVoscUNBQXFDO0FBQ3JDLGtDQUFrQztBQUNsQywrRUFBK0U7QUFDL0UsZUFBZTtBQUNmLGlCQUFpQjtBQUNqQix5REFBeUQ7QUFDekQsVUFBVTtBQUVWLGlEQUFpRDtBQUNqRCw4QkFBOEI7QUFDOUIsMkRBQTJEO0FBQzNELFVBQVU7QUFFViwyQkFBMkI7QUFDM0IseUNBQXlDO0FBQ3pDLGtCQUFrQjtBQUVsQix1QkFBdUI7QUFDdkIsNkJBQTZCO0FBQzdCLGdGQUFnRjtBQUNoRixxQkFBcUI7QUFDckIsUUFBUTtBQUNSLE1BQU07QUFDTixLQUFLO0FBQ0wsNENBQTRDO0FBQzVDLGlCQUFpQjtBQUNqQixpREFBaUQ7QUFDakQsWUFBWTtBQUNaLG1DQUFtQztBQUVuQywwQkFBMEI7QUFDMUIsc0NBQXNDO0FBQ3RDLHlCQUF5QjtBQUN6Qiw0QkFBNEI7QUFDNUIsV0FBVztBQUVYLHVEQUF1RDtBQUN2RCw4Q0FBOEM7QUFFOUMsMEJBQTBCO0FBQzFCLHlDQUF5QztBQUN6Qyw4REFBOEQ7QUFDOUQsaUNBQWlDO0FBQ2pDLHlCQUF5QjtBQUV6QixxQ0FBcUM7QUFDckMsa0NBQWtDO0FBQ2xDLDJCQUEyQjtBQUMzQixlQUFlO0FBQ2YsaUJBQWlCO0FBQ2pCLHlEQUF5RDtBQUN6RCxVQUFVO0FBRVYsMkJBQTJCO0FBQzNCLHlDQUF5QztBQUN6QyxrQkFBa0I7QUFFbEIsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3QixnRkFBZ0Y7QUFDaEYscUJBQXFCO0FBQ3JCLFFBQVE7QUFDUixNQUFNO0FBQ04sS0FBSztBQUVFLE1BQU1FLFdBQVd0QixrRUFBZ0JBLENBQ3RDLGFBQ0EsT0FBT3VCO1FBQW1CLEVBQUVOLFFBQVEsRUFBRTtJQUNwQyxJQUFJO1lBZU9PLGFBQ1FBO1FBZmpCUCxTQUFTWix3RUFBYUE7UUFFdEIsTUFBTW9CLFVBQVU7WUFDZEMsT0FBTyxPQUFrQixPQUFYQyxLQUFLQyxHQUFHO1lBQ3RCQyxRQUFRO1lBQ1JDLFFBQVFQO1FBQ1Y7UUFFQSxxQ0FBcUM7UUFDckMsTUFBTUMsU0FBUyxNQUFNdkIscURBQU1BLENBQUNxQixRQUFRLENBQUNHO1FBQ3JDTSxRQUFRQyxHQUFHLENBQUMsaUJBQWlCUjtRQUU3QixvREFBb0Q7UUFDcERQLFNBQVNYLDBFQUFlQSxDQUFDO1lBQ3ZCb0IsT0FBT0YsRUFBQUEsY0FBQUEsT0FBT1MsR0FBRyxjQUFWVCxrQ0FBQUEsWUFBWVUsRUFBRSxLQUFJLE9BQWtCLE9BQVhQLEtBQUtDLEdBQUc7WUFDeENFLFFBQVEsU0FBT04sZUFBQUEsT0FBT1MsR0FBRyxjQUFWVCxtQ0FBQUEsYUFBWU0sTUFBTSxNQUFLLFdBQ2xDTixPQUFPUyxHQUFHLENBQUNILE1BQU0sR0FDakJQO1FBQ047UUFFQSxzQkFBc0I7UUFDdEJZLFdBQVc7WUFDVGxCLFNBQVNOLDRFQUFpQkE7UUFDNUIsR0FBRztRQUVILDBDQUEwQztRQUMxQyxPQUFPO1lBQ0wsR0FBR2EsTUFBTTtZQUNULHlEQUF5RDtZQUN6RFMsS0FBS1QsT0FBT1MsR0FBRyxHQUNYO2dCQUNFQyxJQUFJVixPQUFPUyxHQUFHLENBQUNDLEVBQUU7Z0JBQ2pCSixRQUFRLE9BQU9OLE9BQU9TLEdBQUcsQ0FBQ0gsTUFBTSxLQUFLLFdBQ2pDTixPQUFPUyxHQUFHLENBQUNILE1BQU0sR0FDakJQO2dCQUNKTSxRQUFRTCxPQUFPUyxHQUFHLENBQUNKLE1BQU07Z0JBQ3pCTyxXQUFXWixPQUFPUyxHQUFHLENBQUNHLFNBQVM7WUFDakMsSUFDQTtRQUNOO0lBQ0YsRUFBRSxPQUFPaEIsT0FBWTtRQUNuQkgsU0FBU1YsMEVBQWVBLENBQUNhLE1BQU1DLE9BQU8sSUFBSTtRQUMxQyxNQUFNRDtJQUNSO0FBQ0YsR0FDQTtBQUVGOztDQUVDLEdBQ0QsZ0RBQWdEO0FBQ2hELGtCQUFrQjtBQUNsQiw2Q0FBNkM7QUFDN0MsWUFBWTtBQUNaLG1DQUFtQztBQUVuQyxtREFBbUQ7QUFFbkQsb0NBQW9DO0FBQ3BDLGtCQUFrQjtBQUNsQiw0QkFBNEI7QUFDNUIsaUNBQWlDO0FBQ2pDLGFBQWE7QUFFYiw0QkFBNEI7QUFDNUIseURBQXlEO0FBRXpELHdEQUF3RDtBQUN4RCwyQkFBMkI7QUFDM0IseUNBQXlDO0FBQ3pDLDBDQUEwQztBQUMxQyxrQkFBa0I7QUFFbEIsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3QixnRkFBZ0Y7QUFDaEYscUJBQXFCO0FBQ3JCLFFBQVE7QUFDUixNQUFNO0FBQ04sS0FBSztBQUNFLE1BQU1pQixlQUFlckMsa0VBQWdCQSxDQUMxQyxjQUNBLE9BQU8wQjtRQUFlLEVBQUVULFFBQVEsRUFBRTtJQUNoQyxJQUFJO1FBQ0ZBLFNBQVNULHdFQUFhQTtRQUV0QixNQUFNZ0IsU0FBUyxNQUFNdkIscURBQU1BLENBQUNxQyxNQUFNLENBQUNaO1FBQ25DSyxRQUFRQyxHQUFHLENBQUMsZUFBZVIsU0FBUyx1QkFBdUI7UUFFM0Qsc0NBQXNDO1FBQ3RDLE1BQU1lLE1BQU1mLE9BQU9BLE1BQU0sS0FBSyxTQUFTQSxPQUFPZSxHQUFHLEtBQUs7UUFDdEQsTUFBTVQsU0FBUyxPQUFPTixPQUFPTSxNQUFNLEtBQUssV0FBV04sT0FBT00sTUFBTSxHQUFHO1FBQ25FLE1BQU1VLFVBQVUsT0FBT2hCLE9BQU9nQixPQUFPLEtBQUssV0FBV2hCLE9BQU9nQixPQUFPLEdBQUdDO1FBRXRFeEIsU0FBU1IsMEVBQWVBLENBQUM7WUFDdkJpQjtZQUNBYTtZQUNBVDtRQUNGO1FBRUEsSUFBSU4sT0FBT2dCLE9BQU8sS0FBS0MsV0FBVztZQUNoQyxJQUFJO2dCQUNGLE1BQU1DLGtCQUFrQixNQUFNQyxNQUFNO2dCQUNwQyxNQUFNQyxjQUFjLE1BQU1GLGdCQUFnQkcsSUFBSTtnQkFFOUMsSUFBSUQsWUFBWUosT0FBTyxLQUFLQyxXQUFXO29CQUNyQ3hCLFNBQVNILG9GQUFxQkEsQ0FBQzhCLFlBQVlKLE9BQU87Z0JBQ3BEO1lBQ0YsRUFBRSxPQUFPTSxjQUFjO2dCQUNyQmYsUUFBUVgsS0FBSyxDQUFDLDRCQUE0QjBCO1lBQzVDO1FBQ0YsT0FBTztZQUNMN0IsU0FBU0gsb0ZBQXFCQSxDQUFDVSxPQUFPZ0IsT0FBTztRQUMvQztRQUVBLDRDQUE0QztRQUM1QyxJQUFJQSxZQUFZQyxXQUFXO1lBQ3pCeEIsU0FBU0gsb0ZBQXFCQSxDQUFDMEI7UUFDakM7UUFFQSwrQ0FBK0M7UUFDL0NMLFdBQVc7WUFDVGxCLFNBQVNMLDRFQUFpQkE7WUFDMUJLLFNBQVNKLDZFQUFrQkE7UUFDN0IsR0FBRztRQUVILE9BQU9XO0lBQ1QsRUFBRSxPQUFPSixPQUFZO1FBQ25CSCxTQUFTUCwwRUFBZUEsQ0FBQ1UsTUFBTUMsT0FBTyxJQUFJO1FBQzFDLE1BQU1EO0lBQ1I7QUFDRixHQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9mZWF0dXJlcy9wbGFjZS1iZXQvbW9kZWwvaW5kZXgudHM/NDdmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBc3luY1RodW5rIH0gZnJvbSAnQHJlZHV4anMvdG9vbGtpdCc7XG5pbXBvcnQgeyBiZXRBcGkgfSBmcm9tICdAL2VudGl0aWVzL2JldC9hcGknO1xuaW1wb3J0IHtcbiAgZmV0Y2hSZWNvbW1lbmRlZEJldFN0YXJ0LFxuICBmZXRjaFJlY29tbWVuZGVkQmV0U3VjY2VzcyxcbiAgZmV0Y2hSZWNvbW1lbmRlZEJldEZhaWx1cmUsXG4gIHBsYWNlQmV0U3RhcnQsXG4gIHBsYWNlQmV0U3VjY2VzcyxcbiAgcGxhY2VCZXRGYWlsdXJlLFxuICBmZXRjaFdpblN0YXJ0LFxuICBmZXRjaFdpblN1Y2Nlc3MsXG4gIGZldGNoV2luRmFpbHVyZSxcbiAgcmVzZXRCZXRBbmltYXRpb24sXG4gIHJlc2V0V2luQW5pbWF0aW9uLFxuICByZXNldExvc2VBbmltYXRpb24sXG59IGZyb20gJ0AvZW50aXRpZXMvYmV0L21vZGVsL3NsaWNlJztcbmltcG9ydCB7IHVwZGF0ZUJhbGFuY2VBZnRlckJldCwgdXBkYXRlQmFsYW5jZUFmdGVyV2luIH0gZnJvbSAnQC9lbnRpdGllcy9iYWxhbmNlL21vZGVsL3NsaWNlJztcblxuLyoqXG4gKiDQkNGB0LjQvdGF0YDQvtC90L3QvtC1INC00LXQudGB0YLQstC40LUg0LTQu9GPINC/0L7Qu9GD0YfQtdC90LjRjyDRgNC10LrQvtC80LXQvdC00YPQtdC80L7QuSDRgdGC0LDQstC60LhcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFJlY29tbWVuZGVkQmV0ID0gY3JlYXRlQXN5bmNUaHVuayhcbiAgJ2JldC9nZXRSZWNvbW1lbmRlZCcsXG4gIGFzeW5jIChfLCB7IGRpc3BhdGNoIH0pID0+IHtcbiAgICB0cnkge1xuICAgICAgZGlzcGF0Y2goZmV0Y2hSZWNvbW1lbmRlZEJldFN0YXJ0KCkpO1xuICAgICAgXG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGJldEFwaS5nZXRSZWNvbW1lbmRlZEJldCgpO1xuICAgICAgXG4gICAgICAvLyDQmNC30LLQu9C10LrQsNC10Lwg0YLQvtC70YzQutC+IHJlY29tbWVuZGVkQW1vdW50INC40Lcg0L7RgtCy0LXRgtCwIEFQSVxuICAgICAgY29uc3QgcmVjb21tZW5kZWRBbW91bnQgPSByZXNwb25zZS5yZWNvbW1lbmRlZEFtb3VudDtcbiAgICAgIFxuICAgICAgZGlzcGF0Y2goZmV0Y2hSZWNvbW1lbmRlZEJldFN1Y2Nlc3MocmVjb21tZW5kZWRBbW91bnQpKTtcbiAgICAgIHJldHVybiByZWNvbW1lbmRlZEFtb3VudDtcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICBkaXNwYXRjaChmZXRjaFJlY29tbWVuZGVkQmV0RmFpbHVyZShlcnJvci5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gZ2V0IHJlY29tbWVuZGVkIGJldCcpKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuKTtcblxuLyoqXG4gKiDQkNGB0LjQvdGF0YDQvtC90L3QvtC1INC00LXQudGB0YLQstC40LUg0LTQu9GPINGA0LDQt9C80LXRidC10L3QuNGPINGB0YLQsNCy0LrQuFxuICovXG4vKipcbiAqINCQ0YHQuNC90YXRgNC+0L3QvdC+0LUg0LTQtdC50YHRgtCy0LjQtSDQtNC70Y8g0YDQsNC30LzQtdGJ0LXQvdC40Y8g0YHRgtCw0LLQutC4XG4gKi9cbi8vIGV4cG9ydCBjb25zdCBwbGFjZUJldCA9IGNyZWF0ZUFzeW5jVGh1bmsoXG4vLyAgICdiZXQvcGxhY2UnLFxuLy8gICBhc3luYyAoYmV0QW1vdW50OiBudW1iZXIsIHsgZGlzcGF0Y2ggfSkgPT4ge1xuLy8gICAgIHRyeSB7XG4vLyAgICAgICBkaXNwYXRjaChwbGFjZUJldFN0YXJ0KCkpO1xuICAgICAgXG4vLyAgICAgICBjb25zdCBiZXREYXRhID0ge1xuLy8gICAgICAgICBiZXRJZDogYGJldC0ke0RhdGUubm93KCl9YCxcbi8vICAgICAgICAgb3B0aW9uOiAnd2luJyxcbi8vICAgICAgICAgYW1vdW50OiBiZXRBbW91bnRcbi8vICAgICAgIH07XG4gICAgICBcbi8vICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGJldEFwaS5wbGFjZUJldChiZXREYXRhKTtcbi8vICAgICAgIGNvbnNvbGUubG9nKCdBUEkgcmVzcG9uc2U6JywgcmVzdWx0KTtcbiAgICAgIFxuLy8gICAgICAgLy8g0J/RgNC+0LLQtdGA0LrQsCDQvdCw0LvQuNGH0LjRjyDQvtCx0YrQtdC60YLQsCBiZXRcbi8vICAgICAgIGlmIChyZXN1bHQuYmV0KSB7XG4vLyAgICAgICAgIC8vINCf0YDQvtCy0LXRgNC60LAg0YLQuNC/0LAgYW1vdW50INC4INC/0L7QtNCz0L7RgtC+0LLQutCwINC/0YDQsNCy0LjQu9GM0L3QvtCz0L4g0LfQvdCw0YfQtdC90LjRj1xuLy8gICAgICAgICBsZXQgYW1vdW50ID0gYmV0QW1vdW50OyAvLyDQn9C+INGD0LzQvtC70YfQsNC90LjRjiDQuNGB0L/QvtC70YzQt9GD0LXQvCDQvtGA0LjQs9C40L3QsNC70YzQvdGD0Y4g0YHRg9C80LzRg1xuICAgICAgICBcbi8vICAgICAgICAgaWYgKHR5cGVvZiByZXN1bHQuYmV0LmFtb3VudCA9PT0gJ29iamVjdCcgJiYgcmVzdWx0LmJldC5hbW91bnQgIT09IG51bGwpIHtcbi8vICAgICAgICAgICAvLyDQldGB0LvQuCBhbW91bnQgLSDQvtCx0YrQtdC60YIsINC4INGDINC90LXQs9C+INC10YHRgtGMINGH0LjRgdC70L7QstC+0LUg0YHQstC+0LnRgdGC0LLQviBhbW91bnRcbi8vICAgICAgICAgICBpZiAodHlwZW9mIHJlc3VsdC5iZXQuYW1vdW50LmFtb3VudCA9PT0gJ251bWJlcicpIHtcbi8vICAgICAgICAgICAgIGFtb3VudCA9IHJlc3VsdC5iZXQuYW1vdW50LmFtb3VudDtcbi8vICAgICAgICAgICB9IGVsc2UgaWYgKHJlc3VsdC5iZXQuYW1vdW50LmFtb3VudCAmJiB0eXBlb2YgcmVzdWx0LmJldC5hbW91bnQuYW1vdW50ID09PSAnb2JqZWN0Jykge1xuLy8gICAgICAgICAgICAgLy8g0JXRgdC70Lgg0LLQvdGD0YLRgNC4INC10YnQtSDQvtC00LjQvSDQvtCx0YrQtdC60YIsINC/0YvRgtCw0LXQvNGB0Y8g0L3QsNC50YLQuCDRh9C40YHQu9C+0LLQvtC1INC30L3QsNGH0LXQvdC40LVcbi8vICAgICAgICAgICAgIGFtb3VudCA9IHJlc3VsdC5iZXQuYW1vdW50LmFtb3VudC5hbW91bnQgfHwgYmV0QW1vdW50O1xuLy8gICAgICAgICAgIH1cbi8vICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgcmVzdWx0LmJldC5hbW91bnQgPT09ICdudW1iZXInKSB7XG4vLyAgICAgICAgICAgYW1vdW50ID0gcmVzdWx0LmJldC5hbW91bnQ7XG4vLyAgICAgICAgIH1cbiAgICAgICAgXG4vLyAgICAgICAgIGRpc3BhdGNoKHBsYWNlQmV0U3VjY2Vzcyh7XG4vLyAgICAgICAgICAgYmV0SWQ6IHJlc3VsdC5iZXQuaWQsXG4vLyAgICAgICAgICAgYW1vdW50OiBhbW91bnQgLy8g0JjRgdC/0L7Qu9GM0LfRg9C10Lwg0L/RgNC+0LLQtdGA0LXQvdC90L7QtSDQuCDQv9C+0LTQs9C+0YLQvtCy0LvQtdC90L3QvtC1INC30L3QsNGH0LXQvdC40LVcbi8vICAgICAgICAgfSkpO1xuLy8gICAgICAgfSBlbHNlIHtcbi8vICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfQndC10LLQtdGA0L3Ri9C5INGE0L7RgNC80LDRgiDQvtGC0LLQtdGC0LAgQVBJJyk7XG4vLyAgICAgICB9XG4gICAgICBcbi8vICAgICAgIC8vINCe0YHRgtCw0LvRjNC90LDRjyDRh9Cw0YHRgtGMINGE0YPQvdC60YbQuNC4INCx0LXQtyDQuNC30LzQtdC90LXQvdC40Llcbi8vICAgICAgIGlmIChyZXN1bHQuYmFsYW5jZSkge1xuLy8gICAgICAgICBkaXNwYXRjaCh1cGRhdGVCYWxhbmNlQWZ0ZXJCZXQocmVzdWx0LmJhbGFuY2UpKTtcbi8vICAgICAgIH1cbiAgICAgIFxuLy8gICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4vLyAgICAgICAgIGRpc3BhdGNoKHJlc2V0QmV0QW5pbWF0aW9uKCkpO1xuLy8gICAgICAgfSwgMTAwMCk7XG4gICAgICBcbi8vICAgICAgIHJldHVybiByZXN1bHQ7XG4vLyAgICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuLy8gICAgICAgZGlzcGF0Y2gocGxhY2VCZXRGYWlsdXJlKGVycm9yLm1lc3NhZ2UgfHwgJ9Ce0YjQuNCx0LrQsCDRgNCw0LfQvNC10YnQtdC90LjRjyDRgdGC0LDQstC60LgnKSk7XG4vLyAgICAgICB0aHJvdyBlcnJvcjtcbi8vICAgICB9XG4vLyAgIH1cbi8vICk7XG4vLyBleHBvcnQgY29uc3QgcGxhY2VCZXQgPSBjcmVhdGVBc3luY1RodW5rKFxuLy8gICAnYmV0L3BsYWNlJyxcbi8vICAgYXN5bmMgKGJldEFtb3VudDogbnVtYmVyLCB7IGRpc3BhdGNoIH0pID0+IHtcbi8vICAgICB0cnkge1xuLy8gICAgICAgZGlzcGF0Y2gocGxhY2VCZXRTdGFydCgpKTtcbiAgICAgIFxuLy8gICAgICAgY29uc3QgYmV0RGF0YSA9IHtcbi8vICAgICAgICAgYmV0SWQ6IGBiZXQtJHtEYXRlLm5vdygpfWAsXG4vLyAgICAgICAgIG9wdGlvbjogJ3dpbicsXG4vLyAgICAgICAgIGFtb3VudDogYmV0QW1vdW50XG4vLyAgICAgICB9O1xuICAgICAgXG4vLyAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBiZXRBcGkucGxhY2VCZXQoYmV0RGF0YSk7XG4vLyAgICAgICBjb25zb2xlLmxvZygnQVBJIHJlc3BvbnNlOicsIHJlc3VsdCk7XG4gICAgICBcbi8vICAgICAgIGlmIChyZXN1bHQuYmV0KSB7XG4vLyAgICAgICAgIC8vINCf0YDQvtCy0LXRgNGP0LXQvCDRgtC40L8g0LTQsNC90L3Ri9GFIGFtb3VudFxuLy8gICAgICAgICBsZXQgYW1vdW50ID0gdHlwZW9mIHJlc3VsdC5iZXQuYW1vdW50ID09PSAnbnVtYmVyJyBcbi8vICAgICAgICAgICA/IHJlc3VsdC5iZXQuYW1vdW50IFxuLy8gICAgICAgICAgIDogYmV0QW1vdW50O1xuICAgICAgICBcbi8vICAgICAgICAgZGlzcGF0Y2gocGxhY2VCZXRTdWNjZXNzKHtcbi8vICAgICAgICAgICBiZXRJZDogcmVzdWx0LmJldC5pZCxcbi8vICAgICAgICAgICBhbW91bnQ6IGFtb3VudFxuLy8gICAgICAgICB9KSk7XG4vLyAgICAgICB9IGVsc2Uge1xuLy8gICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ9Cd0LXQstC10YDQvdGL0Lkg0YTQvtGA0LzQsNGCINC+0YLQstC10YLQsCBBUEknKTtcbi8vICAgICAgIH1cbiAgICAgIFxuLy8gICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4vLyAgICAgICAgIGRpc3BhdGNoKHJlc2V0QmV0QW5pbWF0aW9uKCkpO1xuLy8gICAgICAgfSwgMTAwMCk7XG4gICAgICBcbi8vICAgICAgIHJldHVybiByZXN1bHQ7XG4vLyAgICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuLy8gICAgICAgZGlzcGF0Y2gocGxhY2VCZXRGYWlsdXJlKGVycm9yLm1lc3NhZ2UgfHwgJ9Ce0YjQuNCx0LrQsCDRgNCw0LfQvNC10YnQtdC90LjRjyDRgdGC0LDQstC60LgnKSk7XG4vLyAgICAgICB0aHJvdyBlcnJvcjtcbi8vICAgICB9XG4vLyAgIH1cbi8vICk7XG5cbmV4cG9ydCBjb25zdCBwbGFjZUJldCA9IGNyZWF0ZUFzeW5jVGh1bmsoXG4gICdiZXQvcGxhY2UnLFxuICBhc3luYyAoYmV0QW1vdW50OiBudW1iZXIsIHsgZGlzcGF0Y2ggfSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICBkaXNwYXRjaChwbGFjZUJldFN0YXJ0KCkpO1xuICAgICAgXG4gICAgICBjb25zdCBiZXREYXRhID0ge1xuICAgICAgICBiZXRJZDogYGJldC0ke0RhdGUubm93KCl9YCxcbiAgICAgICAgb3B0aW9uOiAnd2luJyxcbiAgICAgICAgYW1vdW50OiBiZXRBbW91bnRcbiAgICAgIH07XG4gICAgICBcbiAgICAgIC8vINCS0YvQt9C+0LIgQVBJICjQvtGB0YLQsNC10YLRgdGPINCx0LXQtyDQuNC30LzQtdC90LXQvdC40LkpXG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBiZXRBcGkucGxhY2VCZXQoYmV0RGF0YSk7XG4gICAgICBjb25zb2xlLmxvZygnQVBJIHJlc3BvbnNlOicsIHJlc3VsdCk7XG4gICAgICBcbiAgICAgIC8vINCY0YHQv9C+0LvRjNC30YPQtdC8INGC0L7Qu9GM0LrQviDQsdC10LfQvtC/0LDRgdC90YvQtSDQv9GA0LjQvNC40YLQuNCy0L3Ri9C1INC30L3QsNGH0LXQvdC40Y9cbiAgICAgIGRpc3BhdGNoKHBsYWNlQmV0U3VjY2Vzcyh7XG4gICAgICAgIGJldElkOiByZXN1bHQuYmV0Py5pZCB8fCBgYmV0LSR7RGF0ZS5ub3coKX1gLFxuICAgICAgICBhbW91bnQ6IHR5cGVvZiByZXN1bHQuYmV0Py5hbW91bnQgPT09ICdudW1iZXInIFxuICAgICAgICAgID8gcmVzdWx0LmJldC5hbW91bnQgXG4gICAgICAgICAgOiBiZXRBbW91bnRcbiAgICAgIH0pKTtcbiAgICAgIFxuICAgICAgLy8g0KHQsdGA0LDRgdGL0LLQsNC10Lwg0LDQvdC40LzQsNGG0LjRjlxuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIGRpc3BhdGNoKHJlc2V0QmV0QW5pbWF0aW9uKCkpO1xuICAgICAgfSwgMTAwMCk7XG4gICAgICBcbiAgICAgIC8vINCS0L7Qt9Cy0YDQsNGJ0LDQtdC8INCx0LXQt9C+0L/QsNGB0L3Rg9GOINCy0LXRgNGB0LjRjiDRgNC10LfRg9C70YzRgtCw0YLQsFxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4ucmVzdWx0LFxuICAgICAgICAvLyDQo9Cx0LXQtNC40LzRgdGPLCDRh9GC0L4gYmV0INGB0L7QtNC10YDQttC40YIg0YLQvtC70YzQutC+INC/0YDQuNC80LjRgtC40LLQvdGL0LUg0LfQvdCw0YfQtdC90LjRj1xuICAgICAgICBiZXQ6IHJlc3VsdC5iZXQgXG4gICAgICAgICAgPyB7XG4gICAgICAgICAgICAgIGlkOiByZXN1bHQuYmV0LmlkLFxuICAgICAgICAgICAgICBhbW91bnQ6IHR5cGVvZiByZXN1bHQuYmV0LmFtb3VudCA9PT0gJ251bWJlcicgXG4gICAgICAgICAgICAgICAgPyByZXN1bHQuYmV0LmFtb3VudCBcbiAgICAgICAgICAgICAgICA6IGJldEFtb3VudCxcbiAgICAgICAgICAgICAgb3B0aW9uOiByZXN1bHQuYmV0Lm9wdGlvbixcbiAgICAgICAgICAgICAgdGltZXN0YW1wOiByZXN1bHQuYmV0LnRpbWVzdGFtcFxuICAgICAgICAgICAgfVxuICAgICAgICAgIDogbnVsbFxuICAgICAgfTtcbiAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4gICAgICBkaXNwYXRjaChwbGFjZUJldEZhaWx1cmUoZXJyb3IubWVzc2FnZSB8fCAn0J7RiNC40LHQutCwINGA0LDQt9C80LXRidC10L3QuNGPINGB0YLQsNCy0LrQuCcpKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuKTtcblxuLyoqXG4gKiDQkNGB0LjQvdGF0YDQvtC90L3QvtC1INC00LXQudGB0YLQstC40LUg0LTQu9GPINC/0L7Qu9GD0YfQtdC90LjRjyDRgNC10LfRg9C70YzRgtCw0YLQsCDRgdGC0LDQstC60LhcbiAqL1xuLy8gZXhwb3J0IGNvbnN0IGdldFdpblJlc3VsdCA9IGNyZWF0ZUFzeW5jVGh1bmsoXG4vLyAgICdiZXQvZ2V0V2luJyxcbi8vICAgYXN5bmMgKGJldElkOiBzdHJpbmcsIHsgZGlzcGF0Y2ggfSkgPT4ge1xuLy8gICAgIHRyeSB7XG4vLyAgICAgICBkaXNwYXRjaChmZXRjaFdpblN0YXJ0KCkpO1xuICAgICAgXG4vLyAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBiZXRBcGkuZ2V0V2luKGJldElkKTtcbiAgICAgIFxuLy8gICAgICAgZGlzcGF0Y2goZmV0Y2hXaW5TdWNjZXNzKHsgXG4vLyAgICAgICAgIGJldElkLCBcbi8vICAgICAgICAgd2luOiByZXN1bHQud2luLCBcbi8vICAgICAgICAgYW1vdW50OiByZXN1bHQuYW1vdW50IFxuLy8gICAgICAgfSkpO1xuICAgICAgXG4vLyAgICAgICAvLyDQntCx0L3QvtCy0LvRj9C10Lwg0LHQsNC70LDQvdGBXG4vLyAgICAgICBkaXNwYXRjaCh1cGRhdGVCYWxhbmNlQWZ0ZXJXaW4ocmVzdWx0LmJhbGFuY2UpKTtcbiAgICAgIFxuLy8gICAgICAgLy8g0KHQsdGA0LDRgdGL0LLQsNC10Lwg0LDQvdC40LzQsNGG0LjQuCDRh9C10YDQtdC3INC90LXQsdC+0LvRjNGI0YPRjiDQt9Cw0LTQtdGA0LbQutGDXG4vLyAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbi8vICAgICAgICAgZGlzcGF0Y2gocmVzZXRXaW5BbmltYXRpb24oKSk7XG4vLyAgICAgICAgIGRpc3BhdGNoKHJlc2V0TG9zZUFuaW1hdGlvbigpKTtcbi8vICAgICAgIH0sIDIwMDApO1xuICAgICAgXG4vLyAgICAgICByZXR1cm4gcmVzdWx0O1xuLy8gICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbi8vICAgICAgIGRpc3BhdGNoKGZldGNoV2luRmFpbHVyZShlcnJvci5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gZ2V0IHdpbiByZXN1bHQnKSk7XG4vLyAgICAgICB0aHJvdyBlcnJvcjtcbi8vICAgICB9XG4vLyAgIH1cbi8vICk7XG5leHBvcnQgY29uc3QgZ2V0V2luUmVzdWx0ID0gY3JlYXRlQXN5bmNUaHVuayhcbiAgJ2JldC9nZXRXaW4nLFxuICBhc3luYyAoYmV0SWQ6IHN0cmluZywgeyBkaXNwYXRjaCB9KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGRpc3BhdGNoKGZldGNoV2luU3RhcnQoKSk7XG4gICAgICBcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGJldEFwaS5nZXRXaW4oYmV0SWQpO1xuICAgICAgY29uc29sZS5sb2coJ1dpbiByZXN1bHQ6JywgcmVzdWx0KTsgLy8g0JTQvtCx0LDQstGM0YLQtSDQtNC70Y8g0L7RgtC70LDQtNC60LhcbiAgICAgIFxuICAgICAgLy8g0J/RgNC+0LLQtdGA0Y/QtdC8INC90LDQu9C40YfQuNC1INC90LXQvtCx0YXQvtC00LjQvNGL0YUg0L/QvtC70LXQuVxuICAgICAgY29uc3Qgd2luID0gcmVzdWx0LnJlc3VsdCA9PT0gJ3dpbicgfHwgcmVzdWx0LndpbiA9PT0gdHJ1ZTtcbiAgICAgIGNvbnN0IGFtb3VudCA9IHR5cGVvZiByZXN1bHQuYW1vdW50ID09PSAnbnVtYmVyJyA/IHJlc3VsdC5hbW91bnQgOiAwO1xuICAgICAgY29uc3QgYmFsYW5jZSA9IHR5cGVvZiByZXN1bHQuYmFsYW5jZSA9PT0gJ251bWJlcicgPyByZXN1bHQuYmFsYW5jZSA6IHVuZGVmaW5lZDtcbiAgICAgIFxuICAgICAgZGlzcGF0Y2goZmV0Y2hXaW5TdWNjZXNzKHsgXG4gICAgICAgIGJldElkLCBcbiAgICAgICAgd2luLCBcbiAgICAgICAgYW1vdW50IFxuICAgICAgfSkpO1xuICAgICAgXG4gICAgICBpZiAocmVzdWx0LmJhbGFuY2UgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IGJhbGFuY2VSZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2JhbGFuY2UnKTtcbiAgICAgICAgICBjb25zdCBiYWxhbmNlRGF0YSA9IGF3YWl0IGJhbGFuY2VSZXNwb25zZS5qc29uKCk7XG4gICAgICAgICAgXG4gICAgICAgICAgaWYgKGJhbGFuY2VEYXRhLmJhbGFuY2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZGlzcGF0Y2godXBkYXRlQmFsYW5jZUFmdGVyV2luKGJhbGFuY2VEYXRhLmJhbGFuY2UpKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGJhbGFuY2VFcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ZhaWxlZCB0byBmZXRjaCBiYWxhbmNlOicsIGJhbGFuY2VFcnJvcik7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGRpc3BhdGNoKHVwZGF0ZUJhbGFuY2VBZnRlcldpbihyZXN1bHQuYmFsYW5jZSkpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyDQntCx0L3QvtCy0LvRj9C10Lwg0LHQsNC70LDQvdGBINGC0L7Qu9GM0LrQviDQtdGB0LvQuCDQvtC9INC+0L/RgNC10LTQtdC70LXQvVxuICAgICAgaWYgKGJhbGFuY2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBkaXNwYXRjaCh1cGRhdGVCYWxhbmNlQWZ0ZXJXaW4oYmFsYW5jZSkpO1xuICAgICAgfVxuICAgICAgXG4gICAgICAvLyDQodCx0YDQsNGB0YvQstCw0LXQvCDQsNC90LjQvNCw0YbQuNC4INGH0LXRgNC10Lcg0L3QtdCx0L7Qu9GM0YjRg9GOINC30LDQtNC10YDQttC60YNcbiAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICBkaXNwYXRjaChyZXNldFdpbkFuaW1hdGlvbigpKTtcbiAgICAgICAgZGlzcGF0Y2gocmVzZXRMb3NlQW5pbWF0aW9uKCkpO1xuICAgICAgfSwgMjAwMCk7XG4gICAgICBcbiAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuICAgICAgZGlzcGF0Y2goZmV0Y2hXaW5GYWlsdXJlKGVycm9yLm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byBnZXQgd2luIHJlc3VsdCcpKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuKTsiXSwibmFtZXMiOlsiY3JlYXRlQXN5bmNUaHVuayIsImJldEFwaSIsImZldGNoUmVjb21tZW5kZWRCZXRTdGFydCIsImZldGNoUmVjb21tZW5kZWRCZXRTdWNjZXNzIiwiZmV0Y2hSZWNvbW1lbmRlZEJldEZhaWx1cmUiLCJwbGFjZUJldFN0YXJ0IiwicGxhY2VCZXRTdWNjZXNzIiwicGxhY2VCZXRGYWlsdXJlIiwiZmV0Y2hXaW5TdGFydCIsImZldGNoV2luU3VjY2VzcyIsImZldGNoV2luRmFpbHVyZSIsInJlc2V0QmV0QW5pbWF0aW9uIiwicmVzZXRXaW5BbmltYXRpb24iLCJyZXNldExvc2VBbmltYXRpb24iLCJ1cGRhdGVCYWxhbmNlQWZ0ZXJXaW4iLCJnZXRSZWNvbW1lbmRlZEJldCIsIl8iLCJkaXNwYXRjaCIsInJlc3BvbnNlIiwicmVjb21tZW5kZWRBbW91bnQiLCJlcnJvciIsIm1lc3NhZ2UiLCJwbGFjZUJldCIsImJldEFtb3VudCIsInJlc3VsdCIsImJldERhdGEiLCJiZXRJZCIsIkRhdGUiLCJub3ciLCJvcHRpb24iLCJhbW91bnQiLCJjb25zb2xlIiwibG9nIiwiYmV0IiwiaWQiLCJzZXRUaW1lb3V0IiwidGltZXN0YW1wIiwiZ2V0V2luUmVzdWx0IiwiZ2V0V2luIiwid2luIiwiYmFsYW5jZSIsInVuZGVmaW5lZCIsImJhbGFuY2VSZXNwb25zZSIsImZldGNoIiwiYmFsYW5jZURhdGEiLCJqc29uIiwiYmFsYW5jZUVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/features/place-bet/model/index.ts\n"));

/***/ })

});