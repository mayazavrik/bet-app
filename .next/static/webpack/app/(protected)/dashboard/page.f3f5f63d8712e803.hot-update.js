"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(protected)/dashboard/page",{

/***/ "(app-pages-browser)/./src/features/place-bet/model/index.ts":
/*!***********************************************!*\
  !*** ./src/features/place-bet/model/index.ts ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n /**\n * Асинхронное действие для получения рекомендуемой ставки\n */  // export const getRecommendedBet = createAsyncThunk(\n //   'bet/getRecommended',\n //   async (_, { dispatch }) => {\n //     try {\n //       dispatch(fetchRecommendedBetStart());\n //       const recommendedBet = await betApi.getRecommendedBet();\n //       dispatch(fetchRecommendedBetSuccess(recommendedBet));\n //       return recommendedBet;\n //     } catch (error: any) {\n //       dispatch(fetchRecommendedBetFailure(error.message || 'Failed to get recommended bet'));\n //       throw error;\n //     }\n //   }\n // );\n // /**\n //  * Асинхронное действие для размещения ставки\n //  */\n // export const placeBet = createAsyncThunk(\n //   'bet/place',\n //   async (betAmount: number, { dispatch }) => {\n //     try {\n //       dispatch(placeBetStart());\n //       const result = await betApi.placeBet(betAmount);\n //       dispatch(placeBetSuccess({ \n //         betId: result.betId, \n //         amount: betAmount \n //       }));\n //       // Обновляем баланс\n //       dispatch(updateBalanceAfterBet(result.balance));\n //       // Сбрасываем анимацию через небольшую задержку\n //       setTimeout(() => {\n //         dispatch(resetBetAnimation());\n //       }, 1000);\n //       return result;\n //     } catch (error: any) {\n //       dispatch(placeBetFailure(error.message || 'Failed to place bet'));\n //       throw error;\n //     }\n //   }\n // );\n // /**\n //  * Асинхронное действие для получения результата ставки\n //  */\n // export const getWinResult = createAsyncThunk(\n //   'bet/getWin',\n //   async (betId: string, { dispatch }) => {\n //     try {\n //       dispatch(fetchWinStart());\n //       const result = await betApi.getWin(betId);\n //       dispatch(fetchWinSuccess({ \n //         betId, \n //         win: result.win, \n //         amount: result.amount \n //       }));\n //       // Обновляем баланс\n //       dispatch(updateBalanceAfterWin(result.balance));\n //       // Сбрасываем анимации через небольшую задержку\n //       setTimeout(() => {\n //         dispatch(resetWinAnimation());\n //         dispatch(resetLoseAnimation());\n //       }, 2000);\n //       return result;\n //     } catch (error: any) {\n //       dispatch(fetchWinFailure(error.message || 'Failed to get win result'));\n //       throw error;\n //     }\n //   }\n // );\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9mZWF0dXJlcy9wbGFjZS1iZXQvbW9kZWwvaW5kZXgudHMiLCJtYXBwaW5ncyI6IjtBQWdCOEYsQ0FFOUY7O0NBRUMsSUFDRCxxREFBcUQ7Q0FDckQsMEJBQTBCO0NBQzFCLGlDQUFpQztDQUNqQyxZQUFZO0NBQ1osOENBQThDO0NBRTlDLGlFQUFpRTtDQUVqRSw4REFBOEQ7Q0FDOUQsK0JBQStCO0NBQy9CLDZCQUE2QjtDQUM3QixnR0FBZ0c7Q0FDaEcscUJBQXFCO0NBQ3JCLFFBQVE7Q0FDUixNQUFNO0NBQ04sS0FBSztDQUVMLE1BQU07Q0FDTixnREFBZ0Q7Q0FDaEQsTUFBTTtDQUNOLDRDQUE0QztDQUM1QyxpQkFBaUI7Q0FDakIsaURBQWlEO0NBQ2pELFlBQVk7Q0FDWixtQ0FBbUM7Q0FFbkMseURBQXlEO0NBRXpELG9DQUFvQztDQUNwQyxnQ0FBZ0M7Q0FDaEMsNkJBQTZCO0NBQzdCLGFBQWE7Q0FFYiw0QkFBNEI7Q0FDNUIseURBQXlEO0NBRXpELHdEQUF3RDtDQUN4RCwyQkFBMkI7Q0FDM0IseUNBQXlDO0NBQ3pDLGtCQUFrQjtDQUVsQix1QkFBdUI7Q0FDdkIsNkJBQTZCO0NBQzdCLDJFQUEyRTtDQUMzRSxxQkFBcUI7Q0FDckIsUUFBUTtDQUNSLE1BQU07Q0FDTixLQUFLO0NBRUwsTUFBTTtDQUNOLDBEQUEwRDtDQUMxRCxNQUFNO0NBQ04sZ0RBQWdEO0NBQ2hELGtCQUFrQjtDQUNsQiw2Q0FBNkM7Q0FDN0MsWUFBWTtDQUNaLG1DQUFtQztDQUVuQyxtREFBbUQ7Q0FFbkQsb0NBQW9DO0NBQ3BDLGtCQUFrQjtDQUNsQiw0QkFBNEI7Q0FDNUIsaUNBQWlDO0NBQ2pDLGFBQWE7Q0FFYiw0QkFBNEI7Q0FDNUIseURBQXlEO0NBRXpELHdEQUF3RDtDQUN4RCwyQkFBMkI7Q0FDM0IseUNBQXlDO0NBQ3pDLDBDQUEwQztDQUMxQyxrQkFBa0I7Q0FFbEIsdUJBQXVCO0NBQ3ZCLDZCQUE2QjtDQUM3QixnRkFBZ0Y7Q0FDaEYscUJBQXFCO0NBQ3JCLFFBQVE7Q0FDUixNQUFNO0NBQ04sS0FBSyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvZmVhdHVyZXMvcGxhY2UtYmV0L21vZGVsL2luZGV4LnRzPzQ3ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQXN5bmNUaHVuayB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnO1xuaW1wb3J0IHsgYmV0QXBpIH0gZnJvbSAnQC9lbnRpdGllcy9iZXQvYXBpJztcbmltcG9ydCB7XG4gIGZldGNoUmVjb21tZW5kZWRCZXRTdGFydCxcbiAgZmV0Y2hSZWNvbW1lbmRlZEJldFN1Y2Nlc3MsXG4gIGZldGNoUmVjb21tZW5kZWRCZXRGYWlsdXJlLFxuICBwbGFjZUJldFN0YXJ0LFxuICBwbGFjZUJldFN1Y2Nlc3MsXG4gIHBsYWNlQmV0RmFpbHVyZSxcbiAgZmV0Y2hXaW5TdGFydCxcbiAgZmV0Y2hXaW5TdWNjZXNzLFxuICBmZXRjaFdpbkZhaWx1cmUsXG4gIHJlc2V0QmV0QW5pbWF0aW9uLFxuICByZXNldFdpbkFuaW1hdGlvbixcbiAgcmVzZXRMb3NlQW5pbWF0aW9uLFxufSBmcm9tICdAL2VudGl0aWVzL2JldC9tb2RlbC9zbGljZSc7XG5pbXBvcnQgeyB1cGRhdGVCYWxhbmNlQWZ0ZXJCZXQsIHVwZGF0ZUJhbGFuY2VBZnRlcldpbiB9IGZyb20gJ0AvZW50aXRpZXMvYmFsYW5jZS9tb2RlbC9zbGljZSc7XG5cbi8qKlxuICog0JDRgdC40L3RhdGA0L7QvdC90L7QtSDQtNC10LnRgdGC0LLQuNC1INC00LvRjyDQv9C+0LvRg9GH0LXQvdC40Y8g0YDQtdC60L7QvNC10L3QtNGD0LXQvNC+0Lkg0YHRgtCw0LLQutC4XG4gKi9cbi8vIGV4cG9ydCBjb25zdCBnZXRSZWNvbW1lbmRlZEJldCA9IGNyZWF0ZUFzeW5jVGh1bmsoXG4vLyAgICdiZXQvZ2V0UmVjb21tZW5kZWQnLFxuLy8gICBhc3luYyAoXywgeyBkaXNwYXRjaCB9KSA9PiB7XG4vLyAgICAgdHJ5IHtcbi8vICAgICAgIGRpc3BhdGNoKGZldGNoUmVjb21tZW5kZWRCZXRTdGFydCgpKTtcbiAgICAgIFxuLy8gICAgICAgY29uc3QgcmVjb21tZW5kZWRCZXQgPSBhd2FpdCBiZXRBcGkuZ2V0UmVjb21tZW5kZWRCZXQoKTtcbiAgICAgIFxuLy8gICAgICAgZGlzcGF0Y2goZmV0Y2hSZWNvbW1lbmRlZEJldFN1Y2Nlc3MocmVjb21tZW5kZWRCZXQpKTtcbi8vICAgICAgIHJldHVybiByZWNvbW1lbmRlZEJldDtcbi8vICAgICB9IGNhdGNoIChlcnJvcjogYW55KSB7XG4vLyAgICAgICBkaXNwYXRjaChmZXRjaFJlY29tbWVuZGVkQmV0RmFpbHVyZShlcnJvci5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gZ2V0IHJlY29tbWVuZGVkIGJldCcpKTtcbi8vICAgICAgIHRocm93IGVycm9yO1xuLy8gICAgIH1cbi8vICAgfVxuLy8gKTtcblxuLy8gLyoqXG4vLyAgKiDQkNGB0LjQvdGF0YDQvtC90L3QvtC1INC00LXQudGB0YLQstC40LUg0LTQu9GPINGA0LDQt9C80LXRidC10L3QuNGPINGB0YLQsNCy0LrQuFxuLy8gICovXG4vLyBleHBvcnQgY29uc3QgcGxhY2VCZXQgPSBjcmVhdGVBc3luY1RodW5rKFxuLy8gICAnYmV0L3BsYWNlJyxcbi8vICAgYXN5bmMgKGJldEFtb3VudDogbnVtYmVyLCB7IGRpc3BhdGNoIH0pID0+IHtcbi8vICAgICB0cnkge1xuLy8gICAgICAgZGlzcGF0Y2gocGxhY2VCZXRTdGFydCgpKTtcbiAgICAgIFxuLy8gICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYmV0QXBpLnBsYWNlQmV0KGJldEFtb3VudCk7XG4gICAgICBcbi8vICAgICAgIGRpc3BhdGNoKHBsYWNlQmV0U3VjY2Vzcyh7IFxuLy8gICAgICAgICBiZXRJZDogcmVzdWx0LmJldElkLCBcbi8vICAgICAgICAgYW1vdW50OiBiZXRBbW91bnQgXG4vLyAgICAgICB9KSk7XG4gICAgICBcbi8vICAgICAgIC8vINCe0LHQvdC+0LLQu9GP0LXQvCDQsdCw0LvQsNC90YFcbi8vICAgICAgIGRpc3BhdGNoKHVwZGF0ZUJhbGFuY2VBZnRlckJldChyZXN1bHQuYmFsYW5jZSkpO1xuICAgICAgXG4vLyAgICAgICAvLyDQodCx0YDQsNGB0YvQstCw0LXQvCDQsNC90LjQvNCw0YbQuNGOINGH0LXRgNC10Lcg0L3QtdCx0L7Qu9GM0YjRg9GOINC30LDQtNC10YDQttC60YNcbi8vICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuLy8gICAgICAgICBkaXNwYXRjaChyZXNldEJldEFuaW1hdGlvbigpKTtcbi8vICAgICAgIH0sIDEwMDApO1xuICAgICAgXG4vLyAgICAgICByZXR1cm4gcmVzdWx0O1xuLy8gICAgIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbi8vICAgICAgIGRpc3BhdGNoKHBsYWNlQmV0RmFpbHVyZShlcnJvci5tZXNzYWdlIHx8ICdGYWlsZWQgdG8gcGxhY2UgYmV0JykpO1xuLy8gICAgICAgdGhyb3cgZXJyb3I7XG4vLyAgICAgfVxuLy8gICB9XG4vLyApO1xuXG4vLyAvKipcbi8vICAqINCQ0YHQuNC90YXRgNC+0L3QvdC+0LUg0LTQtdC50YHRgtCy0LjQtSDQtNC70Y8g0L/QvtC70YPRh9C10L3QuNGPINGA0LXQt9GD0LvRjNGC0LDRgtCwINGB0YLQsNCy0LrQuFxuLy8gICovXG4vLyBleHBvcnQgY29uc3QgZ2V0V2luUmVzdWx0ID0gY3JlYXRlQXN5bmNUaHVuayhcbi8vICAgJ2JldC9nZXRXaW4nLFxuLy8gICBhc3luYyAoYmV0SWQ6IHN0cmluZywgeyBkaXNwYXRjaCB9KSA9PiB7XG4vLyAgICAgdHJ5IHtcbi8vICAgICAgIGRpc3BhdGNoKGZldGNoV2luU3RhcnQoKSk7XG4gICAgICBcbi8vICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGJldEFwaS5nZXRXaW4oYmV0SWQpO1xuICAgICAgXG4vLyAgICAgICBkaXNwYXRjaChmZXRjaFdpblN1Y2Nlc3MoeyBcbi8vICAgICAgICAgYmV0SWQsIFxuLy8gICAgICAgICB3aW46IHJlc3VsdC53aW4sIFxuLy8gICAgICAgICBhbW91bnQ6IHJlc3VsdC5hbW91bnQgXG4vLyAgICAgICB9KSk7XG4gICAgICBcbi8vICAgICAgIC8vINCe0LHQvdC+0LLQu9GP0LXQvCDQsdCw0LvQsNC90YFcbi8vICAgICAgIGRpc3BhdGNoKHVwZGF0ZUJhbGFuY2VBZnRlcldpbihyZXN1bHQuYmFsYW5jZSkpO1xuICAgICAgXG4vLyAgICAgICAvLyDQodCx0YDQsNGB0YvQstCw0LXQvCDQsNC90LjQvNCw0YbQuNC4INGH0LXRgNC10Lcg0L3QtdCx0L7Qu9GM0YjRg9GOINC30LDQtNC10YDQttC60YNcbi8vICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuLy8gICAgICAgICBkaXNwYXRjaChyZXNldFdpbkFuaW1hdGlvbigpKTtcbi8vICAgICAgICAgZGlzcGF0Y2gocmVzZXRMb3NlQW5pbWF0aW9uKCkpO1xuLy8gICAgICAgfSwgMjAwMCk7XG4gICAgICBcbi8vICAgICAgIHJldHVybiByZXN1bHQ7XG4vLyAgICAgfSBjYXRjaCAoZXJyb3I6IGFueSkge1xuLy8gICAgICAgZGlzcGF0Y2goZmV0Y2hXaW5GYWlsdXJlKGVycm9yLm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byBnZXQgd2luIHJlc3VsdCcpKTtcbi8vICAgICAgIHRocm93IGVycm9yO1xuLy8gICAgIH1cbi8vICAgfVxuLy8gKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/features/place-bet/model/index.ts\n"));

/***/ })

});