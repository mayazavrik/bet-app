"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(protected)/dashboard/page",{

/***/ "(app-pages-browser)/./src/features/place-bet/model/index.ts":
/*!***********************************************!*\
  !*** ./src/features/place-bet/model/index.ts ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRecommendedBet: function() { return /* binding */ getRecommendedBet; },\n/* harmony export */   getWinResult: function() { return /* binding */ getWinResult; },\n/* harmony export */   placeBet: function() { return /* binding */ placeBet; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @reduxjs/toolkit */ \"(app-pages-browser)/./node_modules/@reduxjs/toolkit/dist/redux-toolkit.modern.mjs\");\n/* harmony import */ var _entities_bet_api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/entities/bet/api */ \"(app-pages-browser)/./src/entities/bet/api/index.ts\");\n/* harmony import */ var _entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/entities/bet/model/slice */ \"(app-pages-browser)/./src/entities/bet/model/slice.ts\");\n/* harmony import */ var _entities_balance_model_slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/entities/balance/model/slice */ \"(app-pages-browser)/./src/entities/balance/model/slice.ts\");\n\n\n\n\n/**\n * Асинхронное действие для получения рекомендуемой ставки\n */ const getRecommendedBet = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"bet/getRecommended\", async (_, param)=>{\n    let { dispatch } = param;\n    try {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchRecommendedBetStart)());\n        const response = await _entities_bet_api__WEBPACK_IMPORTED_MODULE_0__.betApi.getRecommendedBet();\n        // Извлекаем только recommendedAmount из ответа API\n        const recommendedAmount = response.recommendedAmount;\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchRecommendedBetSuccess)(recommendedAmount));\n        return recommendedAmount;\n    } catch (error) {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchRecommendedBetFailure)(error.message || \"Failed to get recommended bet\"));\n        throw error;\n    }\n});\n/**\n * Асинхронное действие для размещения ставки\n */ /**\n * Асинхронное действие для размещения ставки\n */ const placeBet = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"bet/place\", async (betAmount, param)=>{\n    let { dispatch } = param;\n    try {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.placeBetStart)());\n        const betData = {\n            betId: \"bet-\".concat(Date.now()),\n            option: \"win\",\n            amount: betAmount\n        };\n        const result = await _entities_bet_api__WEBPACK_IMPORTED_MODULE_0__.betApi.placeBet(betData);\n        console.log(\"API response:\", result);\n        // Проверка наличия объекта bet\n        if (result.bet) {\n            // Проверка типа amount и подготовка правильного значения\n            let amount = betAmount; // По умолчанию используем оригинальную сумму\n            if (typeof result.bet.amount === \"object\" && result.bet.amount !== null) {\n                // Если amount - объект, и у него есть числовое свойство amount\n                if (typeof result.bet.amount.amount === \"number\") {\n                    amount = result.bet.amount.amount;\n                } else if (result.bet.amount.amount && typeof result.bet.amount.amount === \"object\") {\n                    // Если внутри еще один объект, пытаемся найти числовое значение\n                    amount = result.bet.amount.amount.amount || betAmount;\n                }\n            } else if (typeof result.bet.amount === \"number\") {\n                amount = result.bet.amount;\n            }\n            dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.placeBetSuccess)({\n                betId: result.bet.id,\n                amount: amount // Используем проверенное и подготовленное значение\n            }));\n        } else {\n            throw new Error(\"Неверный формат ответа API\");\n        }\n        // Остальная часть функции без изменений\n        if (result.balance) {\n            dispatch((0,_entities_balance_model_slice__WEBPACK_IMPORTED_MODULE_2__.updateBalanceAfterBet)(result.balance));\n        }\n        setTimeout(()=>{\n            dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.resetBetAnimation)());\n        }, 1000);\n        return result;\n    } catch (error) {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.placeBetFailure)(error.message || \"Ошибка размещения ставки\"));\n        throw error;\n    }\n});\n// export const placeBet = createAsyncThunk(\n//   'bet/place',\n//   async (betAmount: number, { dispatch }) => {\n//     try {\n//       dispatch(placeBetStart());\n//       const betData = {\n//         betId: `bet-${Date.now()}`,\n//         option: 'win',\n//         amount: betAmount\n//       };\n//       const result = await betApi.placeBet(betData);\n//       console.log('API response:', result);\n//       // Проверяем структуру результата\n//       if (result.bet) {\n//         // Извлекаем правильное значение суммы ставки\n//         // Если amount - это объект, используем его свойство amount, иначе используем его как есть\n//         const amount = typeof result.bet.amount === 'object' && result.bet.amount !== null \n//           ? result.bet.amount.amount \n//           : result.bet.amount;\n//         dispatch(placeBetSuccess({\n//           betId: result.bet.id,\n//           amount: amount // Используем извлеченное значение\n//         }));\n//       } else {\n//         throw new Error('Неверный формат ответа API');\n//       }\n//       // Обновляем баланс, если он есть в ответе\n//       if (result.balance) {\n//         dispatch(updateBalanceAfterBet(result.balance));\n//       }\n//       setTimeout(() => {\n//         dispatch(resetBetAnimation());\n//       }, 1000);\n//       return result;\n//     } catch (error: any) {\n//       dispatch(placeBetFailure(error.message || 'Ошибка размещения ставки'));\n//       throw error;\n//     }\n//   }\n// );\n/**\n * Асинхронное действие для получения результата ставки\n */ // export const getWinResult = createAsyncThunk(\n//   'bet/getWin',\n//   async (betId: string, { dispatch }) => {\n//     try {\n//       dispatch(fetchWinStart());\n//       const result = await betApi.getWin(betId);\n//       dispatch(fetchWinSuccess({ \n//         betId, \n//         win: result.win, \n//         amount: result.amount \n//       }));\n//       // Обновляем баланс\n//       dispatch(updateBalanceAfterWin(result.balance));\n//       // Сбрасываем анимации через небольшую задержку\n//       setTimeout(() => {\n//         dispatch(resetWinAnimation());\n//         dispatch(resetLoseAnimation());\n//       }, 2000);\n//       return result;\n//     } catch (error: any) {\n//       dispatch(fetchWinFailure(error.message || 'Failed to get win result'));\n//       throw error;\n//     }\n//   }\n// );\nconst getWinResult = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_3__.createAsyncThunk)(\"bet/getWin\", async (betId, param)=>{\n    let { dispatch } = param;\n    try {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchWinStart)());\n        const result = await _entities_bet_api__WEBPACK_IMPORTED_MODULE_0__.betApi.getWin(betId);\n        console.log(\"Win result:\", result); // Добавьте для отладки\n        // Проверяем наличие необходимых полей\n        const win = result.win === true || result.win === false ? result.win : false;\n        const amount = typeof result.amount === \"number\" ? result.amount : 0;\n        const balance = typeof result.balance === \"number\" ? result.balance : undefined;\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchWinSuccess)({\n            betId,\n            win,\n            amount\n        }));\n        // Обновляем баланс только если он определен\n        if (balance !== undefined) {\n            dispatch((0,_entities_balance_model_slice__WEBPACK_IMPORTED_MODULE_2__.updateBalanceAfterWin)(balance));\n        }\n        // Сбрасываем анимации через небольшую задержку\n        setTimeout(()=>{\n            dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.resetWinAnimation)());\n            dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.resetLoseAnimation)());\n        }, 2000);\n        return result;\n    } catch (error) {\n        dispatch((0,_entities_bet_model_slice__WEBPACK_IMPORTED_MODULE_1__.fetchWinFailure)(error.message || \"Failed to get win result\"));\n        throw error;\n    }\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/features/place-bet/model/index.ts\n"));

/***/ })

});