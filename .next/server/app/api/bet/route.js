"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/bet/route";
exports.ids = ["app/api/bet/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbet%2Froute&page=%2Fapi%2Fbet%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbet%2Froute.ts&appDir=%2FUsers%2Fm%2FDesktop%2Fmindbox%2Fbetting-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fm%2FDesktop%2Fmindbox%2Fbetting-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbet%2Froute&page=%2Fapi%2Fbet%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbet%2Froute.ts&appDir=%2FUsers%2Fm%2FDesktop%2Fmindbox%2Fbetting-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fm%2FDesktop%2Fmindbox%2Fbetting-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_m_Desktop_mindbox_betting_app_app_api_bet_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/bet/route.ts */ \"(rsc)/./app/api/bet/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/bet/route\",\n        pathname: \"/api/bet\",\n        filename: \"route\",\n        bundlePath: \"app/api/bet/route\"\n    },\n    resolvedPagePath: \"/Users/m/Desktop/mindbox/betting-app/app/api/bet/route.ts\",\n    nextConfigOutput,\n    userland: _Users_m_Desktop_mindbox_betting_app_app_api_bet_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/bet/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZiZXQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmJldCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmJldCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRm0lMkZEZXNrdG9wJTJGbWluZGJveCUyRmJldHRpbmctYXBwJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRm0lMkZEZXNrdG9wJTJGbWluZGJveCUyRmJldHRpbmctYXBwJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ1M7QUFDdEY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iZXR0aW5nLWFwcC8/YzdmMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvbS9EZXNrdG9wL21pbmRib3gvYmV0dGluZy1hcHAvYXBwL2FwaS9iZXQvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2JldC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2JldFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvYmV0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL20vRGVza3RvcC9taW5kYm94L2JldHRpbmctYXBwL2FwcC9hcGkvYmV0L3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2JldC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbet%2Froute&page=%2Fapi%2Fbet%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbet%2Froute.ts&appDir=%2FUsers%2Fm%2FDesktop%2Fmindbox%2Fbetting-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fm%2FDesktop%2Fmindbox%2Fbetting-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/bet/route.ts":
/*!******************************!*\
  !*** ./app/api/bet/route.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var crypto_js_hmac_sha512__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto-js/hmac-sha512 */ \"(rsc)/./node_modules/crypto-js/hmac-sha512.js\");\n/* harmony import */ var crypto_js_hmac_sha512__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto_js_hmac_sha512__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// Фиктивные данные для ставок\nconst sampleBets = [\n    {\n        id: \"bet-1\",\n        description: \"Футбол: Спартак - ЦСКА\",\n        odds: 1.85,\n        availableOptions: [\n            \"win\",\n            \"lose\",\n            \"draw\"\n        ]\n    },\n    {\n        id: \"bet-2\",\n        description: \"Хоккей: СКА - Динамо\",\n        odds: 2.1,\n        availableOptions: [\n            \"win\",\n            \"lose\"\n        ]\n    },\n    {\n        id: \"bet-3\",\n        description: \"Баскетбол: ЦСКА - Химки\",\n        odds: 1.75,\n        availableOptions: [\n            \"win\",\n            \"lose\"\n        ]\n    }\n];\n// Данные пользователей\nconst users = {\n    \"6\": {\n        secretKey: \"218dd27aebeccecae69ad8408d9a36bf\"\n    }\n};\n// Проверка подписи с подробным логированием\nfunction verifySignature(request, method) {\n    const userId = request.headers.get(\"user-id\");\n    const timestamp = request.headers.get(\"x-timestamp\");\n    const signature = request.headers.get(\"x-signature\");\n    console.log(\"Verifying signature for /bet:\", {\n        userId,\n        timestamp,\n        signature: signature ? signature.substring(0, 20) + \"...\" : undefined\n    });\n    if (!userId || !timestamp || !signature) {\n        console.log(\"Missing auth headers\");\n        return false;\n    }\n    const user = users[userId];\n    if (!user) {\n        console.log(\"User not found:\", userId);\n        return false;\n    }\n    // Проверяем как GET:/bet:{} так и GET:/api/bet:{}\n    // Это поможет определить правильный формат\n    const payloads = [\n        `${method}:/bet:{}`,\n        `${method}:/api/bet:{}`\n    ];\n    for (const payload of payloads){\n        const expectedSignature = crypto_js_hmac_sha512__WEBPACK_IMPORTED_MODULE_1___default()(payload, user.secretKey).toString();\n        console.log(`Checking payload: \"${payload}\"`);\n        console.log(`Expected: ${expectedSignature.substring(0, 20)}...`);\n        console.log(`Actual:   ${signature.substring(0, 20)}...`);\n        if (signature === expectedSignature) {\n            console.log(\"✓ Signature matches!\");\n            return true;\n        }\n    }\n    console.log(\"✗ Signature verification failed for all payloads\");\n    return false;\n}\nasync function GET(request) {\n    console.log(\"GET /api/bet handler called\");\n    // Верификация подписи с информационным логированием\n    const signatureValid = verifySignature(request, \"GET\");\n    if (!signatureValid) {\n        console.warn(\"Invalid signature for GET /api/bet\");\n    // Для отладки временно продолжаем выполнение\n    }\n    // Возвращаем случайную ставку из списка\n    const randomBet = sampleBets[Math.floor(Math.random() * sampleBets.length)];\n    // Добавляем в ответ рекомендацию для клиента\n    const response = {\n        ...randomBet,\n        recommendation: {\n            amount: Math.floor(Math.random() * 50) + 50,\n            option: randomBet.availableOptions[0]\n        }\n    };\n    return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(response);\n}\nasync function POST(request) {\n    console.log(\"POST /api/bet handler called\");\n    try {\n        // Клонируем запрос, чтобы можно было прочитать тело для проверки подписи\n        const requestClone = request.clone();\n        const body = await requestClone.text();\n        console.log(\"POST /api/bet body:\", body);\n        // Проверяем подпись\n        const signatureValid = verifySignature(request, \"POST\");\n        if (!signatureValid) {\n            console.warn(\"Invalid signature for POST /api/bet\");\n        // Для отладки временно продолжаем выполнение\n        }\n        // Парсим тело\n        let parsedBody;\n        try {\n            parsedBody = JSON.parse(body);\n        } catch (e) {\n            parsedBody = {};\n        }\n        // Проверяем необходимые поля\n        if (!parsedBody.betId || !parsedBody.option || !parsedBody.amount) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Missing required fields: betId, option, amount\"\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"Bet placement received:\", parsedBody);\n        // Создаем фиктивный ответ на размещение ставки\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            bet: {\n                id: parsedBody.betId,\n                amount: Number(parsedBody.amount),\n                option: parsedBody.option,\n                odds: 1.9,\n                timestamp: new Date().toISOString()\n            }\n        });\n    } catch (error) {\n        console.error(\"Error in bet placement endpoint:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to place bet\"\n        }, {\n            status: 500\n        });\n    }\n} // import { NextResponse } from 'next/server';\n // import HmacSHA512 from 'crypto-js/hmac-sha512';\n // // Фиктивные данные для ставок\n // const sampleBets = [\n //   {\n //     id: 'bet-1',\n //     description: 'Футбол: Спартак - ЦСКА',\n //     odds: 1.85,\n //     availableOptions: ['win', 'lose', 'draw']\n //   },\n //   {\n //     id: 'bet-2',\n //     description: 'Хоккей: СКА - Динамо',\n //     odds: 2.1,\n //     availableOptions: ['win', 'lose']\n //   },\n //   {\n //     id: 'bet-3',\n //     description: 'Баскетбол: ЦСКА - Химки',\n //     odds: 1.75,\n //     availableOptions: ['win', 'lose']\n //   }\n // ];\n // // Данные пользователей\n // const users = {\n //   '6': { secretKey: '218dd27aebeccecae69ad8408d9a36bf' }\n // };\n // // Проверка подписи с подробным логированием\n // function verifySignature(request, method) {\n //   const userId = request.headers.get('user-id');\n //   const timestamp = request.headers.get('x-timestamp');\n //   const signature = request.headers.get('x-signature');\n //   console.log('Verifying signature for /bet:', {\n //     userId,\n //     timestamp,\n //     signature: signature ? signature.substring(0, 20) + '...' : undefined\n //   });\n //   if (!userId || !timestamp || !signature) {\n //     console.log('Missing auth headers');\n //     return false;\n //   }\n //   const user = users[userId];\n //   if (!user) {\n //     console.log('User not found:', userId);\n //     return false;\n //   }\n //   // Проверяем как GET:/bet:{} так и GET:/api/bet:{}\n //   // Это поможет определить правильный формат\n //   const payloads = [\n //     `${method}:/bet:{}`,\n //     `${method}:/api/bet:{}`\n //   ];\n //   for (const payload of payloads) {\n //     const expectedSignature = HmacSHA512(payload, user.secretKey).toString();\n //     console.log(`Checking payload: \"${payload}\"`);\n //     console.log(`Expected: ${expectedSignature.substring(0, 20)}...`);\n //     console.log(`Actual:   ${signature.substring(0, 20)}...`);\n //     if (signature === expectedSignature) {\n //       console.log('✓ Signature matches!');\n //       return true;\n //     }\n //   }\n //   console.log('✗ Signature verification failed for all payloads');\n //   return false;\n // }\n // export async function GET(request) {\n //   console.log('GET /api/bet handler called');\n //   // Верификация подписи с информационным логированием\n //   const signatureValid = verifySignature(request, 'GET');\n //   if (!signatureValid) {\n //     console.warn('Invalid signature for GET /api/bet');\n //     // Для отладки временно продолжаем выполнение\n //   }\n //   // Возвращаем случайную ставку из списка\n //   const randomBet = sampleBets[Math.floor(Math.random() * sampleBets.length)];\n //   // Добавляем в ответ рекомендацию для клиента\n //   const response = {\n //     ...randomBet,\n //     recommendation: {\n //       amount: Math.floor(Math.random() * 50) + 50,\n //       option: randomBet.availableOptions[0]\n //     }\n //   };\n //   return NextResponse.json(response);\n // }\n // export async function POST(request) {\n //   console.log('POST /api/bet handler called');\n //   try {\n //     // Клонируем запрос, чтобы можно было прочитать тело для проверки подписи\n //     const requestClone = request.clone();\n //     const body = await requestClone.text();\n //     console.log('POST /api/bet body:', body);\n //     // Проверяем подпись\n //     const signatureValid = verifySignature(request, 'POST');\n //     if (!signatureValid) {\n //       console.warn('Invalid signature for POST /api/bet');\n //       // Для отладки временно продолжаем выполнение\n //     }\n //     // Парсим тело\n //     let parsedBody;\n //     try {\n //       parsedBody = JSON.parse(body);\n //     } catch (e) {\n //       parsedBody = {};\n //     }\n //     // Проверяем необходимые поля\n //     if (!parsedBody.betId || !parsedBody.option || !parsedBody.amount) {\n //       return NextResponse.json(\n //         { error: 'Missing required fields: betId, option, amount' },\n //         { status: 400 }\n //       );\n //     }\n //     console.log('Bet placement received:', parsedBody);\n //     // Создаем фиктивный ответ на размещение ставки\n //     return NextResponse.json({\n //         success: true,\n //         bet: {\n //           id: parsedBody.betId,\n //           amount: parsedBody.amount, // Сохраняем amount как число, а не как объект\n //           option: parsedBody.option,\n //           odds: 1.9,\n //           timestamp: new Date().toISOString()\n //         }\n //       });\n //   } catch (error) {\n //     console.error('Error in bet placement endpoint:', error);\n //     return NextResponse.json(\n //       { error: 'Failed to place bet' },\n //       { status: 500 }\n //     );\n //   }\n // }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/bet/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/crypto-js"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fbet%2Froute&page=%2Fapi%2Fbet%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbet%2Froute.ts&appDir=%2FUsers%2Fm%2FDesktop%2Fmindbox%2Fbetting-app%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fm%2FDesktop%2Fmindbox%2Fbetting-app&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();